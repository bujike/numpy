# -*- coding: utf-8 -*-
import numpy as np

"""
一，算术操作
"""

a = np.array([10,20,30,40])
b = np.arange(4)
c = a - b
print (c)

"""
[10 19 28 37]
"""

d = b**2

print(d)

"""
[0 1 4 9]
"""

e = 10*np.sin(a)

print e

"""
[-5.44021111  9.12945251 -9.88031624  7.4511316 ]
"""

f = a<35
print f

"""
[ True  True  True False]
"""

h = a*b
print h
"""
[  0  20  60 120]
"""

"""
二，矩阵相乘
"""

A = np.array([(1,1),(0,1)])
B = np.array([(2,0),(3,4)])

C = A*B
print(C)

"""
[[2 0]
 [0 4]]
"""

D = A.dot(B)
print(D)

"""
[[5 4]
 [3 4]]
"""

E = np.dot(B,A)
print(E)
"""
[[2 2]
 [3 7]]
"""

F = B*A
print(F)
"""
[[2 0]
 [0 4]]
"""

"""
三， 一些操作符，如 += ，*= 。是修改原有数组。而不会创建一个新的
"""

a = np.ones((2,3), dtype=int)
b = np.random.random((2,3))

a += 3
print (a)
"""
[[4 4 4]
 [4 4 4]]
"""

b += a
print b
"""
[[ 4.17044087  4.13547996  4.83411122]
 [ 4.2712341   4.45836698  4.01262145]]
"""

# a += b
# print a

"""
Traceback (most recent call last):
  File "D:/python/numpy/basic_operate.py", line 96, in <module>
    a += b
TypeError: Cannot cast ufunc add output from dtype('float64') to dtype('int32') with casting rule 'same_kind'
"""


"""
四，其他范围操作
"""

a = np.arange(36).reshape(2,3,3,2)
print(a)

"""
[[[[ 0  1]
   [ 2  3]
   [ 4  5]]

  [[ 6  7]
   [ 8  9]
   [10 11]]

  [[12 13]
   [14 15]
   [16 17]]]


 [[[18 19]
   [20 21]
   [22 23]]

  [[24 25]
   [26 27]
   [28 29]]

  [[30 31]
   [32 33]
   [34 35]]]]
"""

print(a.sum())
"""
630
"""

print(a.max())
"""
35
"""
print(a.min())
"""
0
"""
print(a.sum(axis=0))
"""
[[[18 20]
  [22 24]
  [26 28]]

 [[30 32]
  [34 36]
  [38 40]]

 [[42 44]
  [46 48]
  [50 52]]]
"""
print(a.min(axis=1))
"""
[[[ 0  1]
  [ 2  3]
  [ 4  5]]

 [[18 19]
  [20 21]
  [22 23]]]
"""
print(a.min(axis=2))
"""
[[[ 0  1]
  [ 6  7]
  [12 13]]

 [[18 19]
  [24 25]
  [30 31]]]
"""
print(a.min(axis=3))
"""
[[[ 0  2  4]
  [ 6  8 10]
  [12 14 16]]

 [[18 20 22]
  [24 26 28]
  [30 32 34]]]
"""

"""
cumulative 
"""

print(a.cumsum(axis=1))
"""
[[[[ 0  1]
   [ 2  3]
   [ 4  5]]

  [[ 6  8]
   [10 12]
   [14 16]]

  [[18 21]
   [24 27]
   [30 33]]]


 [[[18 19]
   [20 21]
   [22 23]]

  [[42 44]
   [46 48]
   [50 52]]

  [[72 75]
   [78 81]
   [84 87]]]]
"""
print(a.cumsum(axis=2))
"""
[[[[ 0  1]
   [ 2  4]
   [ 6  9]]

  [[ 6  7]
   [14 16]
   [24 27]]

  [[12 13]
   [26 28]
   [42 45]]]


 [[[18 19]
   [38 40]
   [60 63]]

  [[24 25]
   [50 52]
   [78 81]]

  [[30 31]
   [62 64]
   [96 99]]]]
"""
print(a.cumsum(axis=3))

"""
[[[[ 0  1]
   [ 2  5]
   [ 4  9]]

  [[ 6 13]
   [ 8 17]
   [10 21]]

  [[12 25]
   [14 29]
   [16 33]]]


 [[[18 37]
   [20 41]
   [22 45]]

  [[24 49]
   [26 53]
   [28 57]]

  [[30 61]
   [32 65]
   [34 69]]]]
"""
