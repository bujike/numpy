# -*- coding: utf-8 -*-
import numpy as np


"""
一，一维操作类似于python list类型
"""

a = np.arange(10)**3

print(a)

"""
[  0   1   8  27  64 125 216 343 512 729]
"""

print(a[2])

"""
8
"""

print(a[2:5])


"""
从 2 开始 到 5 。不包括 5
[ 8 27 64]
"""

a[:6:2] = -1000

print(a)

"""
相当于 a[0:6:2] = -1000
从 0 开始 到6.每第二个数 置为 -1000 。2 的倍数。不包括6
[-1000     1 -1000    27 -1000   125   216   343   512   729]
"""

print(a[::-1])

"""
反转(每隔 -1 取一个)
[  729   512   343   216   125 -1000    27 -1000     1 -1000]
"""



"""
二，多维数组

多维数组每一个轴都可以索引
"""

"""
从函数创建  多维数组
"""

def f(x,y):
    return 12*x + y


"""
参数传值依次为：
(0,0) (0,1) (0,2) (0,3)
(1,0)....
..................(2,3)
依次类推

"""
multi = np.fromfunction(f,(5,4),dtype=int)
print(multi)

"""
[[ 0  1  2  3]
 [12 13 14 15]
 [24 25 26 27]
 [36 37 38 39]
 [48 49 50 51]]
"""

print(multi[2,3])

"""
27
"""

print(multi[0:5,1])

"""
0 到 5 （不包含 5 ） 行 没行序号为 1 的数：
[ 1 13 25 37 49]
"""

print(multi[2:5,1])


"""
[25 37 49]
"""

print(multi[2:5,2:4])

"""
[[26 27]
 [38 39]
 [50 51]]
"""

print(multi[-1])

"""
最后一行
[48 49 50 51]
"""



"""
类似于 b[i,...] 这里的  . 表示尽可能多的 冒号(:)
x[1,2,...] 相当于 x[1,2,:,:,:]
x[4,...,5,:] 相当于  x[4,:,:,5,:]
"""

a = np.arange(12).reshape(2,2,3)
print(a)

"""
[[[ 0  1  2]
  [ 3  4  5]]

 [[ 6  7  8]
  [ 9 10 11]]]
"""

print(a[1,...])
"""
[[ 6  7  8]
 [ 9 10 11]]
"""

print(a[...,2])
"""
[[ 2  5]
 [ 8 11]]
"""

print(a[:,:,1:3])

"""
[[[ 1  2]
  [ 4  5]]

 [[ 7  8]
  [10 11]]]
"""



"""
三，迭代
"""

for second in a:
    print second
    for one in second:
        print one
"""
[[0 1 2]
 [3 4 5]]

[0 1 2]
[3 4 5]

[[ 6  7  8]
 [ 9 10 11]]

[6 7 8]
[ 9 10 11]
"""


"""
遍历所有元素
"""

for ele in a.flat:
    print ele

"""
0
1
2
3
4
5
6
7
8
9
10
11
"""